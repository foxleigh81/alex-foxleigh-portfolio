.block {
  width: 100%;
  height: 100%;
  position: relative;
  color: white;
  overflow: hidden;

  .foreground {
    padding: vars.$segmentPadding / 3 vars.$segmentPadding / 2;

    @media (min-width: bp.$medium-small) {
      text-align: left;
      padding: vars.$segmentPadding / 2 vars.$segmentPadding / 1.5;
    }
    @media (min-width: bp.$medium) {
      padding: vars.$segmentPadding / 3 vars.$segmentPadding / 1.5;
    }
  }

  .greeting {
    margin: 2rem;
    @media (min-width: bp.$medium) {
      margin: 0;
    }
  }

  h1 {
    font-size: vars.$l-header;
    @media (min-width: bp.$small) {
      font-size: vars.$xl-header*1.5;
    }
  }

  h2 {
    font-size: vars.$l-header;
  }

  a {
    border-bottom: 1px solid;
  }

  :global .mini-me {
    height: 95%;
    display: none;
    position: relative;
    margin-bottom: vars.$margin;
    padding-top: vars.$padding*2;

    img {
      height: 70%;
    }

    @media (min-width: bp.$extra-small) {
     display: block;
     position: absolute;
     top: 30vh;
     left: 60vw;
     height: 70%;
     transform: rotate(-30deg);
    }
    @media (min-width: bp.$small) {
      position: absolute;
      bottom: 0;
      right: vars.$padding;
      height: 100%;
      transform: rotate(0);
    }
  }

}

.salutation {
  position: absolute;
  top: vars.$padding;
  left: 0;
  z-index: 1000;

  @media (min-width: bp.$small) {
    position: relative;
    h1 {
      display: block;
    }
  }
}

.status-container {
  position: absolute;
  left: 0;
  bottom: 0;
  z-index: 1000;
  padding: inherit;
  width: 100%;
  @media (min-width: bp.$medium) {
   width: 40%;
  }
}

// Background is based on time of day

// time, from, to, mid, invert, marginMultiplier
$time_of_day:
  "sunrise" #3B4371 #F3904F #c7a86e false,
  "daylight" #0077ff #004e92 #45cefc true,
  "sunset" #3c1053 #ad5389 #464696 true,
  "darkness" #000428 #004e92 #05021d true
;

// Default backgrounds
@each $time, $from, $to, $mid, $invert in $time_of_day {
  .#{$time} {
    background: $to;  /* fallback for old browsers */
    background: linear-gradient(to bottom, $from 0%, $mid 40%, $to 100%); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */

    :global .welcome-button {
      @include vars.buttonColor($to, $invert);
      margin-top: vars.$margin*2;
    }
  }
}



@mixin enhanced-sky($image) {

  &:before {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    z-index: 200;
    width: 100%;
    height: 100%;
    background: url('./images/#{$image}.svg') no-repeat;
    background-position: right top;
    background-size: cover;
    @media (min-width: bp.$small) {
      background-size: cover;
    }
    @media (min-width: bp.$medium-small) {

      background-size: cover;
    }
    @media (min-width: bp.$medium) {
      background-position: right 150%;
      background-size: cover;
    }

  }
}

// Enhanced backgrounds
@each $time, $a, $b, $c, $d in $time_of_day {
  .#{$time} {
    @include enhanced-sky($time)
  }
}

@mixin foregroundSetup($addHills) {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 200;
    background-size: cover;
    background-repeat: no-repeat;

    @if $addHills == true {
      background-image: url(./images/rolling-hills.svg);
      background-position: bottom right;
      @media (min-width: bp.$medium) {
        background-position: 100% 80%;
      }
      @at-root .darkness {
        .foreground:before {
          filter: brightness(20%) grayscale(70%);
        }
      }
      @at-root .sunrise {
        .foreground:before {
          filter: brightness(60%);
        }
      }
      @at-root .sunset {
        .foreground:before {
          filter: brightness(40%);
        }
      }
    }
}

// Foreground is based on availability status
.status {
  &-available {
    .foreground {
      &:before {
        content: "";
        @include foregroundSetup(true);
      }
    }
  }
  &-unavailable {
    .foreground {
      &:before {
        content: "";
        @include foregroundSetup(true);
      }
    }
    &::after {
      content: "";
      @include foregroundSetup(false);
      background-image: url(./images/office.svg);
      background-position: center right;
      display: none;
      @media (min-width: bp.$extra-small) {
        display: block;
      }
    }
  }
}
